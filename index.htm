<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Favorite GIFs</title>
  <style type="text/css">
    button,
    div,
    form,
    input {
      margin: 10px;
    }
  </style>
</head>

<body>

  <div class="container">
    <h1>GIF Search</h1>

    <!-- gifs will Get Dumped Here -->
    <div id="gifs-view"></div>

    <!-- Rendered Buttons will get Dumped Here  -->
    <div id="buttons-view"></div>

    <form id="gif-form">
      <label for="gif-input">Add a GIF!</label>
      <input type="text" id="gif-input">
      <br>

      <!-- Button triggers new gif to be added -->
      <input id="add-gif" type="submit" value="Add a GIF!">
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript">
      // Initial array of gifs
      var gifs = ["D&D", "GIFs", "Jesus", "The Lion King", "Funny", "Video Games", "The Simpsons", "Anime", "Sunsets", "Computers", "Movies", "Sesame Street"];

      // displaygifInfo function re-renders the HTML to display the appropriate content
      function displaygifInfo()
      {
        var searchTerm = $(this).attr("data-name");
        var queryURL = "https://api.giphy.com/v1/gifs/search?q=" + searchTerm + "&api_key=bd46ux053S4vOpNxOi2SmCQ0iZumQ2k6&limit=10";

        // Creating an AJAX call for the specific gif button being clicked
        $.ajax
        ({
        url: queryURL,
        method: "GET"
        })
        // After data comes back from the request
        .then(function(response)
        {
          console.log(queryURL);
          console.log(response);
          // storing the data from the AJAX request in the results variable
          var results = response.data;
          
          //Console logging results URLs for animated and still image versions.
          //console.log("Results[0] URL: " + results[0].url);
          //console.log("Results[0] URL plus images.fixed_height_still.url: " + results[0].images.fixed_height_still.url);

          // Looping through each result item
          for (var a = 0; a < results.length; a++)
          {
            // Creating and storing a div tag
            var gifDiv = $("<div>");

            // Creating a paragraph tag with the result item's rating
            var p = $("<p>").text("Adultness Rating: " + results[a].rating);

            // Creating and storing an image tag
            var gifImage = $("<img>");
            let stillImage = $("<img>");

            // Setting the src attribute of the image to a property pulled off the result item
            //This gets the animated and still GIF versions.

            //Make attributes
            /*
            gifImage.createAttribute("animated-url");
            gifImage.createAttribute("data-state");
            gifImage.createAttribute("class");

            stillImage.createAttribute("still-url");
            stillImage.createAttribute("data-state");
            stillImage.createAttribute("class");
            */

            document.createAttribute("animated-url");
            document.createAttribute("data-state");
            document.createAttribute("class");
            document.createAttribute("still-url");
            
            gifImage.attr("src", results[a].images.fixed_height.url);
            stillImage.attr("src", results[a].images.fixed_height_still.url);

            //Set these attributes
            /*
            gifImage.setAttribute("animated-url", results[a].images.fixed_height.url); 
            gifImage.setAttribute("data-state", "animated");
            gifImage.setAttribute("class", "gif");

            stillImage.setAttribute("still-url", results[a].images.fixed_height_still.url);
            stillImage.setAttribute("data-state", "still");
            stillImage.setAttribute("class", "gif");
            */
            gifImage.attr("animated-url", results[a].images.fixed_height.url);
            gifImage.attr("still-url", results[a].images.fixed_height_still.url);
            gifImage.attr("data-state", "animated");
            gifImage.attr("class", "gif");

            stillImage.attr("animated-url", results[a].images.fixed_height.url);
            stillImage.attr("still-url", results[a].images.fixed_height_still.url);
            stillImage.attr("data-state", "still");
            stillImage.attr("class", "gif");

            //console.log("stillImage.attr(data-state) " + stillImage.attr("data-state"));
            //console.log("gifImage.attr(data-state) " + gifImage.attr("data-state"));

            // Appending the paragraph and image tag to the gifDiv
            gifDiv.append(p);
            gifDiv.append(stillImage); //Show still images by default!
            //gifDiv.append(gifImage);
            
            // Prependng the gifDiv to the HTML page in the "#gifs-appear-here" div
            $("#gifs-view").prepend(gifDiv);
          }
        });
      }

      
      //If the document is clicked, and the area on the document clicked is a member of class gif,
      //run the function!
      $(document).on("click", ".gif", function(event) 
      {
        //event.preventDefault();
        console.log("On image click function triggered!");
        // The attr jQuery method allows us to get or set the value of any attribute on our HTML element
        let state = $(this).attr("data-state");
        
        console.log("State: " + state);
        // If the clicked image's state is still, update its src attribute to what its data-animate value is.
        // Then, set the image's data-state to animate
        // Else set src to the data-still value
        if (state === "still")
        {
          $(this).attr("src", $(this).attr("animated-url"));
          $(this).attr("data-state", "animated");
        }
        else
        {
          $(this).attr("src", $(this).attr("still-url"));
          $(this).attr("data-state", "still");
        }
    });

      // Function for displaying gif data
      function renderButtons()
      { // Deleting the gifs prior to adding new gifs
        // (this is necessary otherwise you will have repeat buttons)
        $("#buttons-view").empty();

        // Looping through the array of gifs
        for (var d = 0; d < gifs.length; d++)
        { // Then dynamicaly generating buttons for each gif in the array
          // This code $("<button>") is all jQuery needs to create the beginning and end tag. (<button></button>)
          var a = $("<button>");
          // Adding a class of gif-btn to our button
          a.addClass("gif-btn");
          // Adding a data-attribute
          a.attr("data-name", gifs[d]);
          // Providing the initial button text
          a.text(gifs[d]);
          // Adding the button to the buttons-view div
          $("#buttons-view").append(a);
        }
      }

      // This function handles events where a gif button is clicked
      $("#add-gif").on("click", function(event)
      {
        event.preventDefault();
        // This line grabs the input from the textbox
        var gif = $("#gif-input").val().trim();

        // Adding gif from the textbox to our array
        gifs.push(gif);

        // Calling renderButtons which handles the processing of our gif array
        renderButtons();
      });

      // Adding a click event listener to all elements with a class of "gif-btn"
      $(document).on("click", ".gif-btn", displaygifInfo);

      // Calling the renderButtons function to display the intial buttons
      renderButtons();
    </script>
  </div>
</body>

</html>
